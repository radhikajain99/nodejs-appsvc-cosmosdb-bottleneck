# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  webAppName: 'test'
  serviceConnection: 'cnt'
  azureSubscriptionId: '7c71b563-0dc0-4bc0-bcf6-06f8f0516c7a'
  loadTestResource: 'radhikatest-az'
  loadTestResourceGroup: 'radhika-test'
  location: 'EAST US'


steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16'
  displayName: 'Install Node.js'
- task: AzureLoadTest@1
  inputs:
    azureSubscription: 'radhika-vs-sub-cert'
    loadTestConfigFile: 'test/SampleApp.yaml'
    resourceGroup: 'test'
    loadTestResource: 'radhika-test-eus2'
    loadTestRunName: 'sample test run'
    loadTestRunDescription: 'sample run desc'
    overrideParameters: |
      {
        "testId": "testId",
        "displayName": "displayName",
        "description": "description",
        "engineInstances": 1,
        "autoStop": {
          "errorPercentage": 90,
          "timeWindow": 10
        }
      }
- publish: $(System.DefaultWorkingDirectory)/loadTest
  artifact: results
    
# - task: AzurePowerShell@5
#   inputs:
#     azureSubscription: 'mohit-ado-test-arm'
#     ScriptType: 'InlineScript'
#     Inline: |
#       Write-host "Sample script"
#       Write-host "Sample script"
#       Write-host "Sample script"
#       Write-host "INPUT_CONNECTEDSERVICENAMEARM env var in Run-E2E-Tests: $env:INPUT_CONNECTEDSERVICENAMEARM"
#       gci env:* | sort-object name
#     FailOnStandardError: true
#     azurePowerShellVersion: 'LatestVersion'
